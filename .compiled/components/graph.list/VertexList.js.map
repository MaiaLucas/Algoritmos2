{"version":3,"sources":["../../../src/components/graph.list/VertexList.js"],"names":["Vertex","element","_element","_outcoming","edge","push","list","forEach","opposite"],"mappings":";;;;;;;;;;IAAMA,M;AACF,oBAAYC,OAAZ,EAAoB;AAAA;;AAChB,aAAKC,QAAL,GAAgBD,OAAhB;AACA,aAAKE,UAAL,GAAkB,EAAlB;AACA;AACH;;;;gCAMOC,I,EAAM;AACV,iBAAKD,UAAL,CAAgBE,IAAhB,CAAqBD,IAArB;AACH;;;wCAEe;AAAA;;AACZ,gBAAIE,OAAO,KAAK,IAAhB;;AAEA,iBAAKH,UAAL,CAAgBI,OAAhB,CAAyB;AAAA,uBAAQD,iBAAeF,KAAKI,QAAL,CAAc,KAAd,CAAvB;AAAA,aAAzB;;AAEA,mBAAOF,IAAP;AACH;;;mCAEU;AACP,mBAAO,KAAKJ,QAAZ;AACH;;;4BAlBa;AACV,mBAAO,KAAKA,QAAZ;AACH;;;;;;kBAmBUF,M","file":"VertexList.js","sourcesContent":["class Vertex {\r\n    constructor(element){\r\n        this._element = element;\r\n        this._outcoming = [];\r\n        //this._incoming = []\r\n    }\r\n\r\n    get element() {\r\n        return this._element\r\n    }\r\n\r\n    addEdge(edge) {\r\n        this._outcoming.push(edge)\r\n    }\r\n\r\n    adjacencyList() {\r\n        let list = \"\" + this\r\n\r\n        this._outcoming.forEach( edge => list += ` -> ${edge.opposite(this)}`)\r\n\r\n        return list\r\n    }\r\n\r\n    toString() {\r\n        return this._element\r\n    }\r\n}\r\n\r\nexport default Vertex;\r\n"]}