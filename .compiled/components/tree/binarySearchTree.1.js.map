{"version":3,"sources":["../../../src/components/tree/binarySearchTree.1.js"],"names":["BinarySearchTree","root","key","Node","addNode","node","leftChild","parent","rightChild"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEqBA,gB;AACjB,gCAAc;AAAA;;AACV,aAAKC,IAAL,GAAY,IAAZ;AACH;;;;4BAEGC,G,EAAK;AACL,gBAAI,KAAKD,IAAL,IAAa,IAAjB,EAAuB;AACnB,qBAAKA,IAAL,GAAY,IAAIE,cAAJ,CAASD,GAAT,CAAZ;AACH,aAFD,MAEO;AACH,qBAAKE,OAAL,CAAa,KAAKH,IAAlB,EAAwBC,GAAxB;AACH;AACJ;;;gCAEOG,I,EAAMH,G,EAAK;AACf,gBAAIA,MAAMG,KAAKH,GAAf,EAAoB;AAChB,oBAAIG,KAAKC,SAAL,IAAkB,IAAtB,EAA4B;AACxBD,yBAAKC,SAAL,GAAiB,IAAIH,cAAJ,CAASD,GAAT,CAAjB;AACAG,yBAAKC,SAAL,CAAeC,MAAf,GAAwBF,IAAxB;AACH,iBAHD,MAGO;AACP,yBAAKD,OAAL,CAAaC,KAAKC,SAAlB,EAA6BJ,GAA7B;AACC;AACJ,aAPD,MAOO;AACH,oBAAIG,KAAKG,UAAL,IAAmB,IAAvB,EAA6B;AACzBH,yBAAKG,UAAL,GAAkB,IAAIL,cAAJ,CAASD,GAAT,CAAlB;AACAG,yBAAKG,UAAL,CAAgBD,MAAhB,GAAyBF,IAAzB;AACH,iBAHD,MAGO;AACP,yBAAKD,OAAL,CAAaC,KAAKG,UAAlB,EAA8BN,GAA9B;AACC;AACJ;AACJ;;;;;;kBA7BgBF,gB","file":"binarySearchTree.1.js","sourcesContent":["import Node from './node';\r\n\r\nexport default class BinarySearchTree {\r\n    constructor() {\r\n        this.root = null;\r\n    }\r\n\r\n    add(key) {\r\n        if (this.root == null) {\r\n            this.root = new Node(key);\r\n        } else {\r\n            this.addNode(this.root, key);\r\n        }\r\n    }\r\n\r\n    addNode(node, key) {\r\n        if (key < node.key) {\r\n            if (node.leftChild == null) {\r\n                node.leftChild = new Node(key);\r\n                node.leftChild.parent = node;\r\n            } else {\r\n            this.addNode(node.leftChild, key);\r\n            }\r\n        } else { \r\n            if (node.rightChild == null) {\r\n                node.rightChild = new Node(key);\r\n                node.rightChild.parent = node;\r\n            } else {\r\n            this.addNode(node.rightChild, key);\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}