{"version":3,"sources":["../../../src/components/graph.list/Graph.js"],"names":["Graph","vertexes","edges","key","vertex","Vertex","push","origin","destiny","edge","Edge","console","log"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;IAEqBA,K;AACjB,qBAAa;AAAA;;AACT,aAAKC,QAAL,GAAgB,EAAhB;AACA,aAAKC,KAAL,GAAa,EAAb;AACH;;;;kCAESC,G,EAAK;AAAE;AACb,gBAAIC,SAAS,IAAIC,oBAAJ,CAAWF,GAAX,CAAb;AACA,iBAAKF,QAAL,CAAcK,IAAd,CAAmBF,MAAnB;;AAEA,mBAAOA,MAAP;AACH;;;gCAEOG,M,EAAQC,O,EAAS;AAAE;AACvB,gBAAIC,OAAO,IAAIC,kBAAJ,CAASH,MAAT,EAAiBC,OAAjB,CAAX;AACA,iBAAKN,KAAL,CAAWI,IAAX,CAAgBG,IAAhB;;AAEA,mBAAOA,IAAP;AACH;;AAED;AACA;AACA;;;;;;uCAIeN,G,EAAK;;AAGhB;AACA;;AAEA;;AAEAQ,oBAAQC,GAAR,CAAY,KAAKX,QAAjB;AACH;;;;;;kBAnCgBD,K","file":"Graph.js","sourcesContent":["import Vertex from './VertexList'\r\nimport Edge from './EdgeList'\r\n\r\nexport default class Graph {\r\n    constructor(){\r\n        this.vertexes = []\r\n        this.edges = []\r\n    }\r\n\r\n    addVertex(key) { // IGUAL\r\n        let vertex = new Vertex(key)\r\n        this.vertexes.push(vertex)\r\n\r\n        return vertex\r\n    }\r\n\r\n    addEdge(origin, destiny) { // MUDA\r\n        let edge = new Edge(origin, destiny)\r\n        this.edges.push(edge)\r\n        \r\n        return edge\r\n    }\r\n\r\n    //ADJANCENCYLIST() -- IMPRIMIR LISTA DE ADJACÊNCIAS\r\n    // Contém um vértice e as arestas que o ligam\r\n    /*\r\n    Pegar um vértice junto com todas as suas arestas e imprime\r\n    */\r\n\r\n    adjancencyList(key) {\r\n\r\n        \r\n        // for(let i = 0; i < this.vertexes.length; i++) {\r\n        //     let list\r\n\r\n        // }\r\n\r\n        console.log(this.vertexes)\r\n    }\r\n}\r\n"]}